Help on Band in module osgeo.gdal object:

class Band(MajorObject)
 |  Proxy of C++ GDALRasterBandShadow class
 |  
 |  Method resolution order:
 |      Band
 |      MajorObject
 |      __builtin__.object
 |  
 |  Methods defined here:
 |  
 |  Checksum(self, *args, **kwargs)
 |      Checksum(Band self, int xoff=0, int yoff=0, int * xsize=None, int * ysize=None) -> int
 |  
 |  ComputeBandStats(self, *args)
 |      ComputeBandStats(Band self, int samplestep=1)
 |  
 |  ComputeRasterMinMax(self, *args)
 |      ComputeRasterMinMax(Band self, int approx_ok=0)
 |  
 |  ComputeStatistics(self, *args)
 |      ComputeStatistics(Band self, bool approx_ok, GDALProgressFunc callback=0, void * callback_data=None) -> CPLErr
 |  
 |  CreateMaskBand(self, *args)
 |      CreateMaskBand(Band self, int nFlags) -> CPLErr
 |  
 |  DeleteNoDataValue(self, *args)
 |      DeleteNoDataValue(Band self) -> CPLErr
 |  
 |  Fill(self, *args)
 |      Fill(Band self, double real_fill, double imag_fill=0.0) -> CPLErr
 |  
 |  FlushCache(self, *args)
 |      FlushCache(Band self)
 |  
 |  GetBand(self, *args)
 |      GetBand(Band self) -> int
 |  
 |  GetBlockSize(self, *args)
 |      GetBlockSize(Band self)
 |  
 |  GetCategoryNames(self, *args)
 |      GetCategoryNames(Band self) -> char **
 |  
 |  GetColorInterpretation(self, *args)
 |      GetColorInterpretation(Band self) -> GDALColorInterp
 |  
 |  GetColorTable(self, *args)
 |      GetColorTable(Band self) -> ColorTable
 |  
 |  GetDataset(self, *args)
 |      GetDataset(Band self) -> Dataset
 |  
 |  GetDefaultHistogram(self, *args, **kwargs)
 |      GetDefaultHistogram(Band self, double * min_ret=None, double * max_ret=None, int * buckets_ret=None, GUIntBig ** ppanHistogram=None, 
 |          int force=1, GDALProgressFunc callback=0, void * callback_data=None) -> CPLErr
 |  
 |  GetDefaultRAT(self, *args)
 |      GetDefaultRAT(Band self) -> RasterAttributeTable
 |  
 |  GetHistogram(self, *args, **kwargs)
 |      GetHistogram(Band self, double min=-0.5, double max=255.5, int buckets=256, int include_out_of_range=0, int approx_ok=1, 
 |          GDALProgressFunc callback=0, void * callback_data=None) -> CPLErr
 |  
 |  GetMaskBand(self, *args)
 |      GetMaskBand(Band self) -> Band
 |  
 |  GetMaskFlags(self, *args)
 |      GetMaskFlags(Band self) -> int
 |  
 |  GetMaximum(self, *args)
 |      GetMaximum(Band self)
 |  
 |  GetMinimum(self, *args)
 |      GetMinimum(Band self)
 |  
 |  GetNoDataValue(self, *args)
 |      GetNoDataValue(Band self)
 |  
 |  GetOffset(self, *args)
 |      GetOffset(Band self)
 |  
 |  GetOverview(self, *args)
 |      GetOverview(Band self, int i) -> Band
 |  
 |  GetOverviewCount(self, *args)
 |      GetOverviewCount(Band self) -> int
 |  
 |  GetRasterCategoryNames(self, *args)
 |      GetRasterCategoryNames(Band self) -> char **
 |  
 |  GetRasterColorInterpretation(self, *args)
 |      GetRasterColorInterpretation(Band self) -> GDALColorInterp
 |  
 |  GetRasterColorTable(self, *args)
 |      GetRasterColorTable(Band self) -> ColorTable
 |  
 |  GetScale(self, *args)
 |      GetScale(Band self)
 |  
 |  GetStatistics(self, *args)
 |      GetStatistics(Band self, int approx_ok, int force) -> CPLErr
 |  
 |  GetTiledVirtualMem(self, *args, **kwargs)
 |      GetTiledVirtualMem(Band self, GDALRWFlag eRWFlag, int nXOff, int nYOff, int nXSize, int nYSize, int nTileXSize, 
 |          int nTileYSize, GDALDataType eBufType, size_t nCacheSize, char ** options=None) -> VirtualMem
 |  
 |  GetTiledVirtualMemArray(self, eAccess=0, xoff=0, yoff=0, xsize=None, ysize=None, tilexsize=256, tileysize=256, datatype=None, cache_size=10485760, options=None)
 |      Return a NumPy array for the band, seen as a virtual memory mapping with
 |      a tile organization.
 |      An element is accessed with array[tiley][tilex][y][x].
 |      Any reference to the array must be dropped before the last reference to the
 |      related dataset is also dropped.
 |  
 |  GetUnitType(self, *args)
 |      GetUnitType(Band self) -> char const *
 |  
 |  GetVirtualMem(self, *args, **kwargs)
 |      GetVirtualMem(Band self, GDALRWFlag eRWFlag, int nXOff, int nYOff, int nXSize, int nYSize, int nBufXSize, 
 |          int nBufYSize, GDALDataType eBufType, size_t nCacheSize, size_t nPageSizeHint, 
 |          char ** options=None) -> VirtualMem
 |  
 |  GetVirtualMemArray(self, eAccess=0, xoff=0, yoff=0, xsize=None, ysize=None, bufxsize=None, bufysize=None, datatype=None, cache_size=10485760, page_size_hint=0, options=None)
 |      Return a NumPy array for the band, seen as a virtual memory mapping.
 |      An element is accessed with array[y][x].
 |      Any reference to the array must be dropped before the last reference to the
 |      related dataset is also dropped.
 |  
 |  GetVirtualMemAuto(self, *args, **kwargs)
 |      GetVirtualMemAuto(Band self, GDALRWFlag eRWFlag, char ** options=None) -> VirtualMem
 |  
 |  GetVirtualMemAutoArray(self, eAccess=0, options=None)
 |      Return a NumPy array for the band, seen as a virtual memory mapping.
 |      An element is accessed with array[y][x].
 |      Any reference to the array must be dropped before the last reference to the
 |      related dataset is also dropped.
 |  
 |  HasArbitraryOverviews(self, *args)
 |      HasArbitraryOverviews(Band self) -> bool
 |  
 |  ReadAsArray(self, xoff=0, yoff=0, win_xsize=None, win_ysize=None, buf_xsize=None, buf_ysize=None, buf_type=None, buf_obj=None, resample_alg=0, callback=None, callback_data=None)
 |      Reading a chunk of a GDAL band into a numpy array. The optional (buf_xsize,buf_ysize,buf_type)
 |      parameters should generally not be specified if buf_obj is specified. The array is returned
 |  
 |  ReadBlock(self, *args, **kwargs)
 |      ReadBlock(Band self, int xoff, int yoff) -> CPLErr
 |  
 |  ReadRaster(self, xoff=0, yoff=0, xsize=None, ysize=None, buf_xsize=None, buf_ysize=None, buf_type=None, buf_pixel_space=None, buf_line_space=None, resample_alg=0, callback=None, callback_data=None)
 |  
 |  ReadRaster1(self, *args, **kwargs)
 |      ReadRaster1(Band self, double xoff, double yoff, double xsize, double ysize, int * buf_xsize=None, int * buf_ysize=None, 
 |          int * buf_type=None, GIntBig * buf_pixel_space=None, GIntBig * buf_line_space=None, 
 |          GDALRIOResampleAlg resample_alg=GRIORA_NearestNeighbour, 
 |          GDALProgressFunc callback=0, void * callback_data=None) -> CPLErr
 |  
 |  SetCategoryNames(self, *args)
 |      SetCategoryNames(Band self, char ** papszCategoryNames) -> CPLErr
 |  
 |  SetColorInterpretation(self, *args)
 |      SetColorInterpretation(Band self, GDALColorInterp val) -> CPLErr
 |  
 |  SetColorTable(self, *args)
 |      SetColorTable(Band self, ColorTable arg) -> int
 |  
 |  SetDefaultHistogram(self, *args)
 |      SetDefaultHistogram(Band self, double min, double max, int buckets_in) -> CPLErr
 |  
 |  SetDefaultRAT(self, *args)
 |      SetDefaultRAT(Band self, RasterAttributeTable table) -> int
 |  
 |  SetNoDataValue(self, *args)
 |      SetNoDataValue(Band self, double d) -> CPLErr
 |  
 |  SetOffset(self, *args)
 |      SetOffset(Band self, double val) -> CPLErr
 |  
 |  SetRasterCategoryNames(self, *args)
 |      SetRasterCategoryNames(Band self, char ** names) -> CPLErr
 |  
 |  SetRasterColorInterpretation(self, *args)
 |      SetRasterColorInterpretation(Band self, GDALColorInterp val) -> CPLErr
 |  
 |  SetRasterColorTable(self, *args)
 |      SetRasterColorTable(Band self, ColorTable arg) -> int
 |  
 |  SetScale(self, *args)
 |      SetScale(Band self, double val) -> CPLErr
 |  
 |  SetStatistics(self, *args)
 |      SetStatistics(Band self, double min, double max, double mean, double stddev) -> CPLErr
 |  
 |  SetUnitType(self, *args)
 |      SetUnitType(Band self, char const * val) -> CPLErr
 |  
 |  WriteArray(self, array, xoff=0, yoff=0, resample_alg=0, callback=None, callback_data=None)
 |  
 |  WriteRaster(self, *args, **kwargs)
 |      WriteRaster(Band self, int xoff, int yoff, int xsize, int ysize, GIntBig buf_len, int * buf_xsize=None, 
 |          int * buf_ysize=None, int * buf_type=None, GIntBig * buf_pixel_space=None, 
 |          GIntBig * buf_line_space=None) -> CPLErr
 |  
 |  __get_array_interface__(self)
 |  
 |  __init__(self, *args, **kwargs)
 |  
 |  __repr__ = _swig_repr(self)
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  DataType
 |      Band_DataType_get(Band self) -> GDALDataType
 |  
 |  XSize
 |      Band_XSize_get(Band self) -> int
 |  
 |  YSize
 |      Band_YSize_get(Band self) -> int
 |  
 |  thisown
 |      The membership flag
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from MajorObject:
 |  
 |  GetDescription(self, *args)
 |      GetDescription(MajorObject self) -> char const *
 |  
 |  GetMetadata(self, domain='')
 |  
 |  GetMetadataDomainList(self, *args)
 |      GetMetadataDomainList(MajorObject self) -> char **
 |  
 |  GetMetadataItem(self, *args)
 |      GetMetadataItem(MajorObject self, char const * pszName, char const * pszDomain="") -> char const *
 |  
 |  GetMetadata_Dict(self, *args)
 |      GetMetadata_Dict(MajorObject self, char const * pszDomain="") -> char **
 |  
 |  GetMetadata_List(self, *args)
 |      GetMetadata_List(MajorObject self, char const * pszDomain="") -> char **
 |  
 |  SetDescription(self, *args)
 |      SetDescription(MajorObject self, char const * pszNewDesc)
 |  
 |  SetMetadata(self, *args)
 |      SetMetadata(MajorObject self, char ** papszMetadata, char const * pszDomain="") -> CPLErr
 |      SetMetadata(MajorObject self, char * pszMetadataString, char const * pszDomain="") -> CPLErr
 |  
 |  SetMetadataItem(self, *args)
 |      SetMetadataItem(MajorObject self, char const * pszName, char const * pszValue, char const * pszDomain="") -> CPLErr
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from MajorObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)

None2
>>> 
